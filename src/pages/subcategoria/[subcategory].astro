---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { getAllSubcategories } from '../../utils/categories';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog', ({ data }) => {
    return data.draft !== true;
  });

  const subcategories = getAllSubcategories(allPosts);
  const postsPerPage = 6;

  const paths: Array<{
    params: { subcategory: string };
    props: {
      posts: CollectionEntry<'blog'>[];
      categorySlug: string;
      categoryName: string;
      categoryColor: string;
      parentCategory: string;
      currentPage: number;
      totalPages: number;
      totalPosts: number;
    };
  }> = [];

  subcategories.forEach(subInfo => {
    const filteredPosts = allPosts
      .filter(post => post.data.subcategory === subInfo.slug)
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

    const totalPages = Math.ceil(filteredPosts.length / postsPerPage);

    for (let page = 1; page <= totalPages; page++) {
      const start = (page - 1) * postsPerPage;
      const end = start + postsPerPage;
      const pagePosts = filteredPosts.slice(start, end);

      paths.push({
        params: { subcategory: page === 1 ? subInfo.slug : `${subInfo.slug}/${page}` },
        props: {
          posts: pagePosts,
          categorySlug: subInfo.slug,
          categoryName: subInfo.name,
          categoryColor: '#6fc3df',
          parentCategory: subInfo.category,
          currentPage: page,
          totalPages,
          totalPosts: filteredPosts.length
        }
      });
    }
  });

  return paths;
}

const { posts, categorySlug, categoryName, categoryColor, parentCategory, currentPage, totalPages, totalPosts } = Astro.props;
---

<BaseLayout title={`${categoryName} - FreireDev`}>
  <!-- Header de subcategoría -->
  <div class="category-header">
    <div class="category-title-wrapper">
      <h1 class="category-title" style={`color: ${categoryColor}`}>
        {categoryName}
      </h1>
      <span class="category-count" style={`border-color: ${categoryColor}; color: ${categoryColor}`}>
        {totalPosts} {totalPosts === 1 ? 'POST' : 'POSTS'}
      </span>
    </div>
    <a href={`/categoria/${parentCategory}`} class="back-link">
      <span class="back-arrow">←</span>
      {parentCategory.toUpperCase()}
    </a>
  </div>

  <!-- Grid de posts -->
  {posts.length === 0 ? (
    <div class="no-posts">
      <p>NO HAY POSTS EN ESTA CATEGORÍA</p>
      <span class="no-posts-icon">[ ! ]</span>
    </div>
  ) : (
    <div class="posts-grid">
      {posts.map((post: CollectionEntry<'blog'>) => (
        <article class="post-card">
          <a href={`/blog/${post.id}`} class="post-card-link">
            <div class="post-glow" style={`background: linear-gradient(90deg, transparent, ${categoryColor}, transparent)`}></div>

            {post.data.heroImage && (
              <div class="post-image-wrapper">
                <img src={post.data.heroImage.src} alt={post.data.title} class="post-image" />
                <div class="post-image-overlay"></div>
                <div class="post-image-overlay-hover"></div>
              </div>
            )}

            <div class="post-content">
              {/* Título pequeño - visible sin hover */}
              <div class="post-title-small">
                <h2 class="post-title">{post.data.title}</h2>
              </div>

              {/* Contenido completo - visible con hover */}
              <div class="post-full-content">
                <div class="post-meta">
                  <time class="post-date">
                    {new Date(post.data.pubDate).toLocaleDateString('es-ES', {
                      month: 'short',
                      day: 'numeric',
                      year: 'numeric'
                    })}
                  </time>
                </div>

                <h2 class="post-title">{post.data.title}</h2>

                {post.data.description && (
                  <p class="post-description">{post.data.description}</p>
                )}

                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="post-tags">
                    {post.data.tags.slice(0, 3).map((tag: string) => (
                      <span class="post-tag">#{tag}</span>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </a>
        </article>
      ))}
    </div>
  )}

  <!-- Paginación - siempre visible -->
  <div class="pagination">
    <!-- Flecha anterior -->
    {currentPage > 1 ? (
      <a
        href={currentPage === 2 ? `/subcategoria/${categorySlug}` : `/subcategoria/${categorySlug}/${currentPage - 1}`}
        class="pagination-arrow-btn"
        style={`border-color: ${categoryColor}; color: ${categoryColor}`}
      >
        ‹
      </a>
    ) : (
      <span class="pagination-arrow-btn disabled" style={`border-color: ${categoryColor}; color: ${categoryColor}`}>
        ‹
      </span>
    )}

    <!-- Números de página -->
    {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
      <a
        href={page === 1 ? `/subcategoria/${categorySlug}` : `/subcategoria/${categorySlug}/${page}`}
        class={`pagination-number ${page === currentPage ? 'active' : ''}`}
        style={page === currentPage ? `background: ${categoryColor}; border-color: ${categoryColor}; color: #000000 !important` : `border-color: ${categoryColor}; color: ${categoryColor}; background: var(--bg-secondary)`}
      >
        {page}
      </a>
    ))}

    <!-- Flecha siguiente -->
    {currentPage < totalPages ? (
      <a
        href={`/subcategoria/${categorySlug}/${currentPage + 1}`}
        class="pagination-arrow-btn"
        style={`border-color: ${categoryColor}; color: ${categoryColor}`}
      >
        ›
      </a>
    ) : (
      <span class="pagination-arrow-btn disabled" style={`border-color: ${categoryColor}; color: ${categoryColor}`}>
        ›
      </span>
    )}
  </div>
</BaseLayout>

<style>
  /* Category Header */
  .category-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 3rem;
    padding-bottom: 1.5rem;
    border-bottom: 2px solid var(--grid-line);
  }

  .category-title-wrapper {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .category-title {
    font-family: var(--font-primary);
    font-size: 2.5rem;
    font-weight: 700;
    letter-spacing: 0.1em;
    text-shadow: 0 0 30px currentColor;
    margin: 0;
  }

  .category-count {
    font-family: var(--font-primary);
    font-size: 0.875rem;
    font-weight: 700;
    letter-spacing: 0.15em;
    padding: 0.5rem 1rem;
    border: 2px solid;
    border-radius: 4px;
  }

  .back-link {
    font-family: var(--font-primary);
    font-size: 0.875rem;
    font-weight: 600;
    letter-spacing: 0.15em;
    color: var(--text-secondary);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
    text-decoration: none;
  }

  .back-link:hover {
    color: var(--cyan-neon);
    text-shadow: 0 0 10px var(--cyan-glow);
  }

  .back-arrow {
    transition: transform 0.3s ease;
  }

  .back-link:hover .back-arrow {
    transform: translateX(-5px);
  }

  /* Posts Grid */
  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 4rem;
  }

  /* Post Card */
  .post-card {
    position: relative;
    border: 1px solid var(--border-glow);
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.4s ease;
    height: 350px;
  }

  .post-card-link {
    position: relative;
    display: block;
    height: 100%;
    text-decoration: none;
    color: inherit;
  }

  .post-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 15px 40px rgba(0, 217, 255, 0.3);
  }

  .post-glow {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 3;
  }

  .post-card:hover .post-glow {
    opacity: 1;
  }

  /* Imagen de fondo */
  .post-image-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 0;
  }

  .post-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .post-card:hover .post-image {
    transform: scale(1.05);
  }

  .post-image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(180deg,
      rgba(10, 14, 26, 0.1) 0%,
      rgba(10, 14, 26, 0.3) 30%,
      rgba(10, 14, 26, 0.7) 60%,
      rgba(10, 14, 26, 0.85) 100%
    );
    pointer-events: none;
    z-index: 1;
  }

  .post-image-overlay-hover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(180deg,
      rgba(10, 14, 26, 0.85) 0%,
      rgba(10, 14, 26, 0.92) 50%,
      rgba(10, 14, 26, 0.95) 100%
    );
    opacity: 0;
    transition: opacity 0.6s ease;
    pointer-events: none;
    z-index: 1;
  }

  .post-card:hover .post-image-overlay-hover {
    opacity: 1;
  }

  /* Contenido */
  .post-content {
    position: relative;
    z-index: 2;
    padding: 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    overflow: hidden;
  }

  /* Título pequeño - sin hover */
  .post-title-small {
    position: absolute;
    bottom: 2rem;
    left: 2rem;
    right: 2rem;
    transform: translateY(0);
    opacity: 1;
    transition: all 0.5s ease;
    pointer-events: none;
    z-index: 2;
  }

  .post-card:hover .post-title-small {
    transform: translateY(80px);
    opacity: 0;
    pointer-events: none;
  }

  /* Contenido completo - con hover */
  .post-full-content {
    position: absolute;
    bottom: 2rem;
    left: 2rem;
    right: 2rem;
    transform: translateY(120px);
    opacity: 0;
    transition: all 0.5s ease;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    z-index: 1;
    max-height: calc(100% - 4rem);
    overflow: hidden;
  }

  .post-card:hover .post-full-content {
    transform: translateY(0);
    opacity: 1;
    z-index: 3;
  }

  .post-meta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .post-date {
    font-family: 'Courier New', monospace;
    font-size: 0.8rem;
    color: var(--text-muted);
    text-transform: uppercase;
  }

  .post-title {
    font-family: var(--font-primary);
    font-weight: 700;
    line-height: 1.3;
    color: var(--text-primary);
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.8);
    margin: 0;
  }

  .post-title-small .post-title {
    font-size: 1.25rem;
  }

  .post-full-content .post-title {
    font-size: 1.5rem;
    color: var(--cyan-neon);
    text-shadow: 0 0 20px var(--cyan-glow);
  }

  .post-description {
    color: var(--text-secondary);
    font-size: 0.95rem;
    line-height: 1.6;
    text-shadow: 0 1px 4px rgba(0, 0, 0, 0.8);
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .post-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    margin-top: auto;
  }

  .post-tag {
    font-size: 0.7rem;
    color: var(--cyan-bright);
    padding: 0.25rem 0.5rem;
    background: rgba(0, 217, 255, 0.1);
    border: 1px solid var(--cyan-neon);
    border-radius: 3px;
    text-shadow: 0 0 10px var(--cyan-glow);
  }

  /* No posts */
  .no-posts {
    text-align: center;
    padding: 6rem 2rem;
    background: linear-gradient(135deg, var(--bg-tertiary), var(--bg-secondary));
    border: 1px solid var(--border-glow);
    border-radius: 8px;
  }

  .no-posts p {
    font-family: var(--font-primary);
    font-size: 1.5rem;
    color: var(--text-secondary);
    letter-spacing: 0.1em;
    margin-bottom: 1rem;
  }

  .no-posts-icon {
    font-family: var(--font-primary);
    font-size: 3rem;
    color: var(--orange-accent);
    text-shadow: 0 0 20px var(--orange-glow);
  }

  /* Paginación visible y clásica */
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.75rem;
    margin-top: 4rem;
    padding: 1.5rem;
    background: rgba(13, 18, 33, 0.5);
    border-radius: 8px;
    border: 1px solid var(--border-glow);
  }

  .pagination-arrow-btn {
    font-family: var(--font-primary);
    font-size: 1.5rem;
    font-weight: 700;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bg-secondary);
    border: 2px solid;
    border-radius: 8px;
    transition: all 0.3s ease;
    text-decoration: none;
    line-height: 1;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  }

  .pagination-arrow-btn:hover:not(.disabled) {
    background: currentColor;
    color: var(--bg-primary) !important;
    box-shadow: 0 0 25px currentColor, 0 5px 15px rgba(0, 0, 0, 0.5);
    transform: translateY(-3px);
  }

  .pagination-arrow-btn.disabled {
    opacity: 0.2;
    cursor: not-allowed;
    pointer-events: none;
    background: var(--bg-primary);
  }

  .pagination-number {
    font-family: var(--font-primary);
    font-size: 1.1rem;
    font-weight: 600;
    min-width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 1rem;
    background: var(--bg-secondary);
    border: 2px solid;
    border-radius: 8px;
    transition: all 0.3s ease;
    text-decoration: none;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  }

  .pagination-number:not(.active):hover {
    background: currentColor;
    color: var(--bg-primary) !important;
    box-shadow: 0 0 25px currentColor, 0 5px 15px rgba(0, 0, 0, 0.5);
    transform: translateY(-3px);
  }

  .pagination-number.active {
    font-weight: 900;
    box-shadow: 0 0 30px currentColor, 0 5px 20px rgba(0, 0, 0, 0.5);
    transform: scale(1.1);
  }

  /* Light Mode - Ajustes de texto */
  :root.light-mode .post-title-small .post-title {
    color: #ffffff !important;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3) !important;
  }

  :root.light-mode .post-description {
    color: #ffffff !important;
    text-shadow: 0 1px 4px rgba(0, 0, 0, 0.3) !important;
  }

  :root.light-mode .post-date {
    color: #e0e0e0 !important;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .posts-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 768px) {
    .category-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .category-title-wrapper {
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .category-icon {
      font-size: 1.5rem;
    }

    .category-title {
      font-size: 1.75rem;
    }

    .category-count {
      font-size: 0.75rem;
      padding: 0.4rem 0.8rem;
    }

    .posts-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .post-card {
      height: 300px;
    }

    .post-content {
      padding: 1.5rem;
    }

    .post-title-small {
      bottom: 1.5rem;
      left: 1.5rem;
      right: 1.5rem;
    }

    .post-title-small .post-title {
      font-size: 1.1rem;
    }

    .post-full-content {
      bottom: 1.5rem;
      left: 1.5rem;
      right: 1.5rem;
    }

    .post-full-content .post-title {
      font-size: 1.25rem;
    }

    .post-description {
      font-size: 0.9rem;
    }

    .pagination {
      flex-wrap: wrap;
      gap: 0.5rem;
      padding: 1rem;
    }

    .pagination-arrow-btn,
    .pagination-number {
      width: 45px;
      height: 45px;
      min-width: 45px;
      font-size: 1rem;
    }
  }
</style>
