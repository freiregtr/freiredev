---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { getAllTags, normalizeTag, getTagInfo } from '../../utils/tags';
import { getSlugFromId } from '../../utils/posts';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog', ({ data }) => {
    return data.draft !== true;
  });

  const tags = getAllTags(allPosts);

  const paths: Array<{
    params: { tag: string };
    props: {
      posts: CollectionEntry<'blog'>[];
      tagSlug: string;
      tagName: string;
      tagColor: string;
      totalPosts: number;
    };
  }> = [];

  tags.forEach(tagInfo => {
    const filteredPosts = allPosts
      .filter(post => {
        if (!post.data.tags || !Array.isArray(post.data.tags)) return false;
        return post.data.tags.some(tag => normalizeTag(tag) === tagInfo.slug);
      })
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

    paths.push({
      params: { tag: tagInfo.slug },
      props: {
        posts: filteredPosts,
        tagSlug: tagInfo.slug,
        tagName: tagInfo.name,
        tagColor: tagInfo.color,
        totalPosts: filteredPosts.length
      }
    });
  });

  return paths;
}

const { posts, tagSlug, tagName, tagColor, totalPosts } = Astro.props;
---

<BaseLayout title={`Tag: ${tagName}`} description={`Todas las entradas etiquetadas con ${tagName}`}>
  <!-- Header -->
  <div class="category-header">
    <div class="header-content">
      <div class="header-title-group">
        <span class="header-icon" style={`color: ${tagColor}`}>#</span>
        <h1 class="header-title" style={`color: ${tagColor}`}>{tagName}</h1>
      </div>
      <p class="header-subtitle">
        {totalPosts} {totalPosts === 1 ? 'entrada' : 'entradas'}
      </p>
    </div>
  </div>

  <!-- Posts Grid -->
  <div class="posts-grid">
    {posts.map((post) => (
      <article class="post-card">
        <a href={`/blog/${getSlugFromId(post.id)}`} class="post-link">
          <div class="post-glow" style={`background: linear-gradient(90deg, transparent, ${tagColor}, transparent)`}></div>

          {post.data.heroImage && (
            <div class="post-image-wrapper">
              <Image src={post.data.heroImage} alt={post.data.title} class="post-image" />
              <div class="post-image-overlay"></div>
              <div class="post-image-overlay-hover"></div>
            </div>
          )}

          <div class="post-content">
            <div class="post-title-small">
              <h2 class="post-title">{post.data.title}</h2>
            </div>

            <div class="post-full-content">
              <div class="post-meta">
                <span class="post-category" style={`color: ${tagColor}`}>
                  #{tagSlug}
                </span>
                <time class="post-date">
                  {new Date(post.data.pubDate).toLocaleDateString('es-ES', {
                    month: 'short',
                    day: 'numeric'
                  })}
                </time>
              </div>

              <h2 class="post-title">{post.data.title}</h2>

              {post.data.description && (
                <p class="post-description">{post.data.description}</p>
              )}

              {post.data.tags && post.data.tags.length > 0 && (
                <div class="post-tags">
                  {post.data.tags.slice(0, 3).map((tag: string) => (
                    <span class="post-tag">#{tag}</span>
                  ))}
                </div>
              )}
            </div>
          </div>
        </a>
      </article>
    ))}
  </div>
</BaseLayout>

<style>
  /* Header */
  .category-header {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 2px solid var(--grid-line);
    position: relative;
  }

  .category-header::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg,
      transparent,
      currentColor 20%,
      currentColor 80%,
      transparent
    );
    opacity: 0.5;
    filter: blur(2px);
  }

  .header-content {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .header-title-group {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .header-icon {
    font-family: var(--font-primary);
    font-size: 2rem;
    font-weight: 900;
    text-shadow: 0 0 20px currentColor;
  }

  .header-title {
    font-family: var(--font-primary);
    font-size: 2.5rem;
    font-weight: 700;
    letter-spacing: 0.05em;
    text-shadow: 0 0 25px currentColor;
    margin: 0;
  }

  .header-subtitle {
    font-family: 'Courier New', monospace;
    font-size: 1rem;
    color: var(--text-muted);
    margin: 0;
    padding-left: 3rem;
  }

  /* Posts Grid */
  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 4rem;
  }

  /* Post Card */
  .post-card {
    position: relative;
    border: 1px solid var(--border-glow);
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.4s ease;
    height: 400px;
  }

  .post-link {
    position: relative;
    display: block;
    height: 100%;
    text-decoration: none;
    color: inherit;
  }

  .post-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(0, 217, 255, 0.3);
  }

  .post-glow {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 3;
  }

  .post-card:hover .post-glow {
    opacity: 1;
  }

  /* Post Image */
  .post-image-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 0;
  }

  .post-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .post-card:hover .post-image {
    transform: scale(1.05);
  }

  .post-image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(180deg,
      rgba(10, 14, 26, 0.1) 0%,
      rgba(10, 14, 26, 0.2) 60%,
      rgba(10, 14, 26, 0.85) 100%
    );
    pointer-events: none;
    z-index: 1;
  }

  .post-image-overlay-hover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(180deg,
      rgba(10, 14, 26, 0.85) 0%,
      rgba(10, 14, 26, 0.92) 50%,
      rgba(10, 14, 26, 0.95) 100%
    );
    opacity: 0;
    transition: opacity 0.6s ease;
    pointer-events: none;
    z-index: 1;
  }

  .post-card:hover .post-image-overlay-hover {
    opacity: 1;
  }

  /* Post Content */
  .post-content {
    position: relative;
    z-index: 2;
    padding: 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    overflow: hidden;
  }

  .post-title-small {
    position: absolute;
    bottom: 2rem;
    left: 2rem;
    right: 2rem;
    transform: translateY(0);
    opacity: 1;
    transition: all 0.5s ease;
    pointer-events: none;
    z-index: 2;
  }

  .post-card:hover .post-title-small {
    transform: translateY(80px);
    opacity: 0;
  }

  .post-full-content {
    position: absolute;
    bottom: 2rem;
    left: 2rem;
    right: 2rem;
    transform: translateY(120px);
    opacity: 0;
    transition: all 0.5s ease;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    z-index: 1;
    max-height: calc(100% - 4rem);
    overflow: hidden;
  }

  .post-card:hover .post-full-content {
    transform: translateY(0);
    opacity: 1;
    z-index: 3;
  }

  /* Post Meta */
  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 0.5rem;
  }

  .post-category {
    font-family: var(--font-primary);
    font-size: 0.75rem;
    font-weight: 700;
    letter-spacing: 0.1em;
    text-shadow: 0 0 10px currentColor;
  }

  .post-date {
    font-family: 'Courier New', monospace;
    font-size: 0.7rem;
    color: var(--text-muted);
  }

  /* Post Title */
  .post-title-small .post-title {
    font-family: var(--font-primary);
    font-size: 1.25rem;
    font-weight: 700;
    line-height: 1.3;
    color: #ffffff;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.8);
    margin: 0;
  }

  .post-full-content .post-title {
    font-family: var(--font-primary);
    font-size: 1.5rem;
    font-weight: 700;
    line-height: 1.3;
    color: #ffffff;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.8);
    margin: 0;
  }

  /* Post Description */
  .post-description {
    color: var(--text-secondary);
    font-size: 0.9rem;
    line-height: 1.6;
    text-shadow: 0 1px 4px rgba(0, 0, 0, 0.8);
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    margin: 0;
  }

  /* Post Tags */
  .post-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    margin-top: auto;
  }

  .post-tag {
    font-size: 0.7rem;
    color: var(--cyan-bright);
    padding: 0.25rem 0.5rem;
    background: rgba(0, 217, 255, 0.1);
    border: 1px solid var(--cyan-neon);
    border-radius: 3px;
    text-shadow: 0 0 10px var(--cyan-glow);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .posts-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .post-card {
      height: 350px;
    }

    .header-title {
      font-size: 2rem;
    }

    .header-icon {
      font-size: 1.5rem;
    }

    .header-subtitle {
      padding-left: 2.5rem;
    }
  }
</style>
