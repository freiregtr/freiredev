---
import BaseLayout from './BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import { normalizeTag } from '../utils/tags';

type Props = CollectionEntry<'blog'>['data'] & { slug: string };

const { title, description, pubDate, updatedDate, heroImage, category, tags, author, slug } = Astro.props;

const categoryColors: Record<string, string> = {
  typescript: '#00d9ff',
  iot: '#ff6b35',
  programacion: '#6fc3df',
  linux: '#ffd700'
};

// Get all posts for recent posts sidebar
const allPosts = await getCollection('blog', ({ data }) => {
  return data.draft !== true;
});

const recentPosts = allPosts
  .filter(post => post.id !== slug)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 5);

// Group posts by category for tree navigation
const categories = ['typescript', 'iot', 'programacion', 'linux'] as const;
const categoryNames: Record<string, string> = {
  typescript: 'TypeScript',
  iot: 'IoT & Hardware',
  programacion: 'Programación',
  linux: 'Linux & DevOps'
};

const postsByCategory = categories.map(cat => ({
  id: cat,
  name: categoryNames[cat],
  color: categoryColors[cat],
  posts: allPosts
    .filter(post => post.data.category === cat)
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
}));
---

<BaseLayout title={title} description={description}>
  <div class="post-wrapper">
  <!-- Hero Header with Image -->
  <div class="post-hero">
    <div class="hero-overlay"></div>
    {heroImage ? (
      <Image src={heroImage} alt={title} class="hero-image" />
    ) : (
      <div class="hero-fallback"></div>
    )}
    <div class="hero-content-wrapper">
      <div class="hero-metadata">
        <span class="hero-category" style={`color: ${categoryColors[category]}`}>
          [{category.toUpperCase()}]
        </span>
        <span class="hero-separator">•</span>
        <time class="hero-date">
          {new Date(pubDate).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}
        </time>
      </div>
      <h1 class="hero-title">{title}</h1>
      <p class="hero-description">{description}</p>
      {tags && tags.length > 0 && (
        <div class="hero-tags">
          {tags.map((tag: string) => (
            <a href={`/tag/${normalizeTag(tag)}`} class="hero-tag">#{tag}</a>
          ))}
        </div>
      )}
    </div>
  </div>

  <!-- Main Layout 20/50/30 -->
  <div class="post-layout">
    <!-- Left Tree Navigation 20% -->
    <aside class="post-tree-nav">
      <div class="sidebar-module tree-module">
        <div class="module-header">
          <h3 class="module-title">tree ./blog</h3>
        </div>
        <div class="module-content">
          <div class="console-output">
            <div class="console-line">./blog/</div>
            <ul class="tree-root">
              {postsByCategory.map((category) => (
                <li class="tree-category">
                  <span class="category-folder" style={`color: ${category.color}`}>
                    {category.name}/ ({category.posts.length})
                  </span>
                  {category.posts.length > 0 && (
                    <ul class="tree-posts">
                      {category.posts.map((post) => (
                        <li class="tree-post">
                          <a
                            href={`/blog/${post.id}`}
                            class={post.id === slug ? 'active' : ''}
                          >
                            {post.data.title}
                          </a>
                        </li>
                      ))}
                    </ul>
                  )}
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </aside>

    <!-- Main Content 50% -->
    <article class="post-content">
      <div class="content-wrapper">
        <slot />
      </div>

      <!-- Post Footer -->
      <div class="post-footer">
        <div class="post-author">
          <span class="author-label">AUTOR:</span>
          <span class="author-name">{author}</span>
        </div>
        {updatedDate && (
          <div class="post-updated">
            <span class="updated-label">ACTUALIZADO:</span>
            <time>
              {new Date(updatedDate).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}
            </time>
          </div>
        )}
      </div>

      <div class="back-link">
        <a href="/blog">
          <span class="back-arrow">←</span>
          VOLVER AL BLOG
        </a>
      </div>
    </article>

    <!-- Sidebar 30% -->
    <aside class="post-sidebar">
      <!-- Table of Contents - Console Style -->
      <div class="sidebar-module toc-module">
        <div class="module-header">
          <h3 class="module-title">tree ./contenido</h3>
        </div>
        <div class="module-content">
          <div class="console-output" id="toc-tree">
            <div class="console-line">./contenido/</div>
            <div class="toc-loading">// Generando índice...</div>
          </div>
        </div>
      </div>

      <!-- Recent Posts -->
      <div class="sidebar-module recent-module">
        <div class="module-header">
          <h3 class="module-title">POSTS RECIENTES</h3>
        </div>
        <div class="module-content">
          {recentPosts.length > 0 ? (
            <ul class="recent-list">
              {recentPosts.map((post) => (
                <li class="recent-item">
                  <a href={`/blog/${post.id}`} class="recent-link">
                    <span class="recent-category" style={`color: ${categoryColors[post.data.category]}`}>
                      [{post.data.category.substring(0, 3).toUpperCase()}]
                    </span>
                    <span class="recent-title">{post.data.title}</span>
                    <time class="recent-date">
                      {new Date(post.data.pubDate).toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: '2-digit' })}
                    </time>
                  </a>
                </li>
              ))}
            </ul>
          ) : (
            <p class="no-recent">No hay posts recientes</p>
          )}
        </div>
      </div>
    </aside>
  </div>
  </div>
</BaseLayout>

<style>
  /* Post Wrapper - Escape parent max-width */
  .post-wrapper {
    width: 100vw;
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
  }

  /* Hero Section */
  .post-hero {
    position: relative;
    width: 100vw;
    min-height: 400px;
    display: flex;
    align-items: flex-end;
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
    margin-top: calc(-3rem - 90px);
    margin-bottom: 3rem;
    overflow: hidden;
  }

  .hero-image,
  .hero-fallback {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .hero-fallback {
    background: linear-gradient(135deg,
      var(--bg-secondary) 0%,
      var(--bg-tertiary) 50%,
      var(--bg-secondary) 100%
    );
    background-size: 200% 200%;
    animation: gradient-shift 15s ease infinite;
  }

  @keyframes gradient-shift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(180deg,
      rgba(0, 0, 0, 0.3) 0%,
      rgba(0, 0, 0, 0.5) 40%,
      rgba(0, 0, 0, 0.85) 70%,
      rgba(0, 0, 0, 0.98) 100%
    );
    z-index: 1;
  }

  .hero-content-wrapper {
    position: relative;
    z-index: 2;
    width: 100%;
    max-width: 1400px;
    margin: 0 auto;
    padding: 3rem 2rem;
  }

  .hero-metadata {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    font-family: var(--font-primary);
    font-size: 0.875rem;
  }

  .hero-category {
    font-weight: 700;
    letter-spacing: 0.1em;
    text-shadow: 0 0 10px currentColor;
  }

  .hero-separator {
    color: var(--text-muted);
  }

  .hero-date {
    color: var(--text-secondary);
  }

  .hero-title {
    font-family: var(--font-primary);
    font-size: clamp(2rem, 5vw, 3.5rem);
    font-weight: 900;
    color: var(--text-primary);
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  .hero-description {
    font-size: clamp(1rem, 2vw, 1.25rem);
    color: var(--text-secondary);
    line-height: 1.6;
    margin-bottom: 1.5rem;
    max-width: 800px;
  }

  .hero-tags {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .hero-tag {
    font-size: 0.875rem;
    color: var(--text-secondary);
    padding: 0.5rem 1rem;
    background: rgba(0, 0, 0, 0.5);
    border: 1px solid var(--grid-line);
    border-radius: 4px;
    backdrop-filter: blur(10px);
    text-decoration: none;
    display: inline-block;
    transition: all 0.3s ease;
  }

  .hero-tag:hover {
    color: var(--cyan-neon);
    background: rgba(0, 217, 255, 0.15);
    border-color: var(--cyan-neon);
    box-shadow: 0 0 15px rgba(0, 217, 255, 0.3);
    transform: translateY(-2px);
  }

  /* Main Layout - 3 columnas */
  .post-layout {
    display: grid;
    grid-template-columns: 280px 1fr 320px;
    gap: 2rem;
    max-width: 1500px;
    margin: 0 auto;
  }

  /* Main Content */
  .post-content {
    min-width: 0;
  }

  .content-wrapper {
    background: var(--bg-tertiary);
    border: 1px solid var(--border-glow);
    border-radius: 8px;
    padding: 2.5rem;
    box-shadow: 0 0 20px rgba(0, 217, 255, 0.1);
  }

  /* Content Headings - Legibles y elegantes */
  .content-wrapper :global(h1),
  .content-wrapper :global(h2),
  .content-wrapper :global(h3),
  .content-wrapper :global(h4) {
    font-family: var(--font-body);
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    font-weight: 700;
    letter-spacing: -0.02em;
    position: relative;
  }

  .content-wrapper :global(h1) {
    font-size: 2.25rem;
    color: #f5f5f5;
    border-bottom: 2px solid rgba(255, 255, 255, 0.1);
    padding-bottom: 0.5rem;
  }

  .content-wrapper :global(h2) {
    font-size: 1.875rem;
    color: #e8e8e8;
    border-bottom: 1px solid rgba(255, 255, 255, 0.08);
    padding-bottom: 0.5rem;
  }

  .content-wrapper :global(h3) {
    font-size: 1.5rem;
    color: #d5d5d5;
  }

  .content-wrapper :global(h4) {
    font-size: 1.25rem;
    color: #c5c5c5;
  }

  /* Body Text - Máxima legibilidad */
  .content-wrapper :global(p) {
    margin-bottom: 1.5rem;
    line-height: 1.8;
    color: #b3bcc7;
    font-size: 1.0625rem;
  }

  .content-wrapper :global(strong) {
    color: #e0e8f0;
    font-weight: 600;
  }

  .content-wrapper :global(em) {
    color: #a0aab5;
  }

  /* Lists */
  .content-wrapper :global(ul),
  .content-wrapper :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 2rem;
    color: #b3bcc7;
  }

  .content-wrapper :global(li) {
    margin-bottom: 0.75rem;
    line-height: 1.7;
  }

  .content-wrapper :global(li::marker) {
    color: var(--cyan-bright);
  }

  /* Links - Cyan subtle */
  .content-wrapper :global(a) {
    color: var(--cyan-bright);
    text-decoration: none;
    border-bottom: 1px solid rgba(111, 195, 223, 0.3);
    transition: all 0.2s ease;
  }

  .content-wrapper :global(a:hover) {
    color: var(--cyan-neon);
    border-bottom-color: var(--cyan-neon);
  }

  /* Blockquotes */
  .content-wrapper :global(blockquote) {
    border-left: 3px solid rgba(0, 217, 255, 0.5);
    padding-left: 1.5rem;
    margin: 2rem 0;
    color: #a8b5c2;
    font-style: italic;
    background: rgba(0, 217, 255, 0.03);
    padding: 1rem 1.5rem;
    border-radius: 0 4px 4px 0;
  }

  .content-wrapper :global(blockquote p) {
    color: inherit;
  }

  /* Post Footer */
  .post-footer {
    margin-top: 3rem;
    padding: 2rem;
    background: var(--bg-tertiary);
    border: 1px solid var(--grid-line);
    border-radius: 8px;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .post-author,
  .post-updated {
    font-family: var(--font-primary);
    font-size: 0.875rem;
  }

  .author-label,
  .updated-label {
    color: var(--text-muted);
    margin-right: 0.5rem;
  }

  .author-name {
    color: var(--cyan-neon);
    font-weight: 600;
  }

  .post-updated time {
    color: var(--text-secondary);
  }

  .back-link {
    margin-top: 2rem;
  }

  .back-link a {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    font-family: var(--font-primary);
    font-weight: 600;
    color: var(--cyan-neon);
    padding: 1rem 2rem;
    border: 2px solid var(--cyan-neon);
    border-radius: 4px;
    transition: all 0.3s ease;
  }

  .back-link a:hover {
    background: var(--cyan-neon);
    color: var(--bg-primary);
    box-shadow: 0 0 20px var(--cyan-glow);
    transform: translateX(-5px);
  }

  .back-arrow {
    transition: transform 0.3s ease;
  }

  .back-link a:hover .back-arrow {
    transform: translateX(-5px);
  }

  /* Left Tree Navigation */
  .post-tree-nav {
    position: sticky;
    top: 6rem;
    height: fit-content;
    max-height: calc(100vh - 8rem);
    overflow-y: auto;
  }

  .tree-root {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .tree-category {
    margin-bottom: 1rem;
  }

  .category-folder {
    display: block;
    font-family: var(--font-primary);
    font-size: 0.85rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .category-folder:hover {
    text-shadow: 0 0 10px currentColor;
    padding-left: 0.5rem;
  }

  .tree-posts {
    list-style: none;
    padding-left: 1.5rem;
    margin: 0;
  }

  .tree-post {
    margin: 0.25rem 0;
    position: relative;
  }

  .tree-post::before {
    content: '├── ';
    position: absolute;
    left: -1.5rem;
    color: var(--text-muted);
    font-family: 'Courier New', monospace;
  }

  .tree-post:last-child::before {
    content: '└── ';
  }

  .tree-post a {
    display: block;
    color: var(--text-secondary);
    text-decoration: none;
    font-size: 0.875rem;
    line-height: 1.6;
    transition: all 0.3s ease;
    padding: 0.25rem 0;
  }

  .tree-post a:hover {
    color: var(--cyan-neon);
    padding-left: 0.5rem;
  }

  .tree-post a.active {
    color: var(--cyan-neon);
    font-weight: 600;
    text-shadow: 0 0 10px var(--cyan-glow);
  }

  /* Sidebar */
  .post-sidebar {
    position: sticky;
    top: 6rem;
    height: fit-content;
  }

  .sidebar-module {
    background: var(--bg-tertiary);
    border: 1px solid var(--border-glow);
    border-radius: 8px;
    overflow: hidden;
    margin-bottom: 1.5rem;
    box-shadow: 0 0 20px rgba(0, 217, 255, 0.1);
  }

  .module-header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    background: var(--bg-secondary);
    border-bottom: 1px solid var(--cyan-neon);
    box-shadow: 0 1px 10px var(--cyan-glow);
  }

  .module-icon {
    font-size: 1.25rem;
  }

  .module-title {
    font-family: var(--font-primary);
    font-size: 0.875rem;
    font-weight: 700;
    color: var(--cyan-neon);
    letter-spacing: 0.1em;
    margin: 0;
  }

  .module-content {
    padding: 1rem;
  }

  /* Console TOC */
  .console-output {
    font-family: 'Courier New', monospace;
    font-size: 0.875rem;
    color: var(--cyan-bright);
    line-height: 1.6;
  }

  .console-line {
    color: var(--text-secondary);
    margin-bottom: 0.5rem;
  }

  .toc-loading {
    color: var(--text-muted);
    font-style: italic;
  }

  .console-output :global(ul) {
    list-style: none;
    padding-left: 0;
    margin: 0;
  }

  .console-output :global(li) {
    padding-left: 1.5rem;
    position: relative;
    margin: 0.25rem 0;
  }

  .console-output :global(li::before) {
    content: '├── ';
    position: absolute;
    left: 0;
    color: var(--text-muted);
  }

  .console-output :global(li:last-child::before) {
    content: '└── ';
  }

  .console-output :global(a) {
    color: var(--cyan-bright);
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .console-output :global(a:hover) {
    color: var(--cyan-neon);
    text-shadow: 0 0 10px var(--cyan-glow);
    padding-left: 0.5rem;
  }

  /* Recent Posts */
  .recent-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .recent-item {
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--grid-line);
  }

  .recent-item:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
    border-bottom: none;
  }

  .recent-link {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .recent-link:hover {
    transform: translateX(5px);
  }

  .recent-category {
    font-family: var(--font-primary);
    font-size: 0.75rem;
    font-weight: 700;
    letter-spacing: 0.1em;
  }

  .recent-title {
    color: var(--text-primary);
    font-weight: 500;
    line-height: 1.4;
  }

  .recent-link:hover .recent-title {
    color: var(--cyan-neon);
  }

  .recent-date {
    font-family: 'Courier New', monospace;
    font-size: 0.75rem;
    color: var(--text-muted);
  }

  .no-recent {
    color: var(--text-muted);
    font-style: italic;
    text-align: center;
  }

  /* Responsive */
  @media (max-width: 1600px) {
    .post-layout {
      grid-template-columns: 260px 1fr 300px;
      gap: 1.25rem;
    }
  }

  @media (max-width: 1024px) {
    /* Solo contenido central en tablet */
    .post-layout {
      grid-template-columns: 1fr;
    }

    .post-tree-nav,
    .post-sidebar {
      display: none;
    }

    .post-hero {
      margin: -2rem -1rem 2rem;
    }

    .content-wrapper {
      padding: 2rem;
    }
  }

  @media (max-width: 768px) {
    /* Solo contenido central en móvil */
    .post-layout {
      grid-template-columns: 1fr;
    }

    .post-tree-nav,
    .post-sidebar {
      display: none;
    }

    .post-hero {
      margin: -2rem -1rem 2rem;
      min-height: 300px;
    }

    .hero-content-wrapper {
      padding: 2rem 1.5rem;
    }

    .content-wrapper {
      padding: 1.5rem;
    }
  }
</style>

<script>
  // Generate Table of Contents from headings
  function generateTOC() {
    const content = document.querySelector('.content-wrapper');
    const tocContainer = document.getElementById('toc-tree');

    if (!content || !tocContainer) return;

    const headings = content.querySelectorAll('h1, h2, h3');

    if (headings.length === 0) {
      tocContainer.innerHTML = '<div class="console-line">./contenido/</div><div class="toc-loading">// Sin encabezados</div>';
      return;
    }

    let tocHTML = '<div class="console-line">./contenido/</div><ul>';

    headings.forEach((heading, index) => {
      const id = `heading-${index}`;
      heading.id = id;

      const level = parseInt(heading.tagName.substring(1));
      const indent = '  '.repeat(level - 1);
      const text = heading.textContent || '';

      tocHTML += `<li style="padding-left: ${level * 1.5}rem"><a href="#${id}">${text}</a></li>`;
    });

    tocHTML += '</ul>';
    tocContainer.innerHTML = tocHTML;
  }

  // Run on page load
  document.addEventListener('DOMContentLoaded', generateTOC);

  // Smooth scroll for TOC links
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (target.tagName === 'A' && target.getAttribute('href')?.startsWith('#')) {
      e.preventDefault();
      const id = target.getAttribute('href')?.substring(1);
      const element = document.getElementById(id || '');
      if (element) {
        element.scrollIntoView({ behavior: 'smooth', block: 'start' });
      }
    }
  });
</script>
